--- nickle-2.77/doc/tutorial/advanced/concurrency.sgml.orig	2012-11-05 06:42:49.000000000 +0100
+++ nickle-2.77/doc/tutorial/advanced/concurrency.sgml	2012-11-09 21:55:30.982986528 +0100
@@ -222,6 +222,7 @@
 <literal>wait</literal> merely decrements the count of <literal>s</literal>, which starts with the initial value specified by <literal>new</literal>.
 If the count, after the decrement, is positive, the thread continues to run; if it is negative, it blocks until the count becomes positive again.
 This will occur when one of the running threads calls <literal>signal</literal>, which increments the count of <literal>s</literal> and wakes up another thread if any are waiting.
+</para>
 </sect3>
 
 <sect3><title>Negative initial counts</title>
--- nickle-2.77/doc/tutorial/intro/variables.sgml.orig	2012-11-05 06:42:49.000000000 +0100
+++ nickle-2.77/doc/tutorial/intro/variables.sgml	2012-11-09 21:54:48.236321654 +0100
@@ -297,7 +297,7 @@
 separate key from value.  Eliding the key specifies the
 "default" value -- used to instantiate newly created elements in the hash.
 </para>
-
+</sect3>
 <sect3><title>Pointers</title>
 <para>
 Pointers hold a reference to a separate object; multiple pointers may point at the same object and changes to the referenced object are reflected both in the underlying object as well as in any other references to the same object.
